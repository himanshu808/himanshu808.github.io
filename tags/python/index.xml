<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Himanshu Shah</title>
    <link>https://himanshu808.github.io/tags/python/</link>
    <description>Recent content in Python on Himanshu Shah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Aug 2023 13:37:43 -0700</lastBuildDate><atom:link href="https://himanshu808.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cron-Ease</title>
      <link>https://himanshu808.github.io/projects/cron-ease/</link>
      <pubDate>Mon, 27 Mar 2023 14:29:41 -0700</pubDate>
      
      <guid>https://himanshu808.github.io/projects/cron-ease/</guid>
      <description>A user interface for managing cron jobs</description>
    </item>
    
    <item>
      <title>Tweet Sentiment Analysis</title>
      <link>https://himanshu808.github.io/projects/tweet-sentiment-analysis/</link>
      <pubDate>Sat, 01 Apr 2023 22:35:50 -0400</pubDate>
      
      <guid>https://himanshu808.github.io/projects/tweet-sentiment-analysis/</guid>
      <description>Categorizing tweets as positive or negative</description>
    </item>
    
    <item>
      <title>SMPL Compiler</title>
      <link>https://himanshu808.github.io/projects/smpl-compiler/</link>
      <pubDate>Sun, 26 Feb 2023 14:58:29 -0800</pubDate>
      
      <guid>https://himanshu808.github.io/projects/smpl-compiler/</guid>
      <description>An optimizing compiler for SMPL language</description>
    </item>
    
    <item>
      <title>Partially Persistent BST</title>
      <link>https://himanshu808.github.io/projects/partially-persistent-bst/</link>
      <pubDate>Thu, 02 Mar 2023 01:44:30 -0800</pubDate>
      
      <guid>https://himanshu808.github.io/projects/partially-persistent-bst/</guid>
      <description>Augmenting BST to support partial persistence</description>
    </item>
    
    <item>
      <title>Chat Room</title>
      <link>https://himanshu808.github.io/projects/chat-room/</link>
      <pubDate>Wed, 08 Mar 2023 23:50:15 -0800</pubDate>
      
      <guid>https://himanshu808.github.io/projects/chat-room/</guid>
      <description>A GUI-based chat room using Tkinter and sockets</description>
    </item>
    
    <item>
      <title>Codon: A high-performance Python Compiler</title>
      <link>https://himanshu808.github.io/til/codon-python/</link>
      <pubDate>Mon, 14 Aug 2023 13:37:43 -0700</pubDate>
      
      <guid>https://himanshu808.github.io/til/codon-python/</guid>
      <description>what Codon is</description>
    </item>
    
    <item>
      <title>Visible Alpha - SE 2</title>
      <link>https://himanshu808.github.io/experience/va-2/</link>
      <pubDate>Thu, 02 Mar 2023 19:38:10 -0800</pubDate>
      
      <guid>https://himanshu808.github.io/experience/va-2/</guid>
      <description>Responsibilities/Accomplishments After 1.5 years at Visible Alpha, I was promoted to the Software Engineer 2 position. My accomplishments during this time were -
Added Snowflake as a data delivery channel using `Falcon` and `MySQL`, increasing revenue by `45%` and reducing the customerâ€™s Time to Value. Revamped the file dispatcher service to reduce the number of open SSH connections by `5x`, increasing product scalability. Built APIs to reduce the average Tech-Support turnaround time by `80%` from `10` to `2` minutes.</description>
    </item>
    
    <item>
      <title>Visible Alpha - SE 1</title>
      <link>https://himanshu808.github.io/experience/va-1/</link>
      <pubDate>Thu, 02 Mar 2023 19:07:33 -0800</pubDate>
      
      <guid>https://himanshu808.github.io/experience/va-1/</guid>
      <description>Responsibilities/Accomplishments As a Software Engineer in the Data feed and APIs team, I -
Migrated the existing monolithic ETL application to microservices, delivering high-volume, real-time data with low latency to clients, using `Django`, `MongoDB`, and `Redis`, driving `$2 million` in revenue. Reduced the ETL app file dispatch latency by `~80%` using `RabbitMQ` and `Celery` for async task execution (60 to 10 seconds). Added `REST APIs` and `AWS S3` as data delivery channels to ease data consumption for customers.</description>
    </item>
    
  </channel>
</rss>
